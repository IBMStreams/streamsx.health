apply plugin: 'java'
apply from: '../../common.gradle'

def STREAMS_INSTALL = System.getenv("STREAMS_INSTALL")
def topologyToolkitPath = STREAMS_INSTALL + '/toolkits/com.ibm.streamsx.topology'
def healthIngestToolkitPath = '../../ingest/common/com.ibm.streamsx.health.ingest'

repositories { 
    mavenCentral() 
}

dependencies {
    compile fileTree(dir: System.getenv("STREAMS_INSTALL") + '/lib', include: ['*.jar'])
    compile fileTree(dir: topologyToolkitPath + '/lib', include: ['*.jar'])
    compile fileTree(dir: healthIngestToolkitPath + '/lib', include: ['*.jar'])
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
}

task buildIngestToolkit(type: GradleBuild) {
    buildFile = '../../ingest/common/com.ibm.streamsx.health.ingest/build.gradle'
    tasks = ['build']
}

task buildService(type: JavaExec, dependsOn: 'classes') {
	main = 'com.ibm.streamsx.health.simulate.beacon.services.HealthDataBeaconService'
	classpath = sourceSets.main.runtimeClasspath
}

task cleanUp() {
	doLast {
		delete 'com.ibm.streamsx.health.simulate.beacon.services.HealthDataBeaconService.sab'
		delete 'bin'
	}
}

compileJava.dependsOn buildIngestToolkit
build.finalizedBy(buildService)
clean.dependsOn cleanUp