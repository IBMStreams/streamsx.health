apply plugin: 'java'
apply from: '../../common.gradle'

def STREAMS_INSTALL = System.getenv("STREAMS_INSTALL")
def healthIngestToolkitPath = '../../ingest/common/com.ibm.streamsx.health.ingest'
def physionetToolkitPath = '../../ingest/physionet/com.ibm.streamsx.health.ingest.physionet'
def jsonToolkitPath = STREAMS_INSTALL + '/toolkits/com.ibm.streamsx.json'
def topologyToolkitPath = STREAMS_INSTALL + '/toolkits/com.ibm.streamsx.topology'
def dateTimeToolkitPath = STREAMS_INSTALL + '/toolkits/com.ibm.streamsx.datetime'

sourceSets {
    main {
        java {
            srcDir 'impl/java/src'
        }
    }
}

repositories { 
    mavenCentral() 
}

dependencies {
    compile fileTree(dir: System.getenv("STREAMS_INSTALL") + '/lib', include: ['*.jar'])
    compile fileTree(dir: topologyToolkitPath + '/lib', include: ['*.jar'])
    compile fileTree(dir: '../../ingest/common/com.ibm.streamsx.health.ingest/lib', include: ['*.jar'])
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
}

task buildToolkit {
    doLast {
        splMakeToolkit()
    }
}

task getDeps(type: Copy) {
  from configurations.runtime
  into 'opt/downloaded'
  exclude '*streams*'
}

task buildIngestToolkit(type: GradleBuild) {
    buildFile = '../../ingest/common/com.ibm.streamsx.health.ingest/build.gradle'
    tasks = ['build']
}

task buildPhysionetToolkit(type: GradleBuild) {
    buildFile = '../../ingest/physionet/com.ibm.streamsx.health.ingest.physionet/build.gradle'
    tasks = ['build']
}

task buildServices(dependsOn: ['buildToolkit', 'buildIngestToolkit', 'buildPhysionetToolkit']) {
    doLast {
        def serviceToolkitPath = healthIngestToolkitPath + ':' + physionetToolkitPath + ':' + jsonToolkitPath + ':' + topologyToolkitPath + ':' + ':' + dateTimeToolkitPath
        compileApp('com.ibm.streamsx.health.beacon', 'ECGBeaconService', serviceToolkitPath) 
    }
}

task cleanToolkit {
    doLast {
        splCleanToolkit()
        delete 'output'
    }   
}

build.dependsOn buildServices, getDeps
clean.dependsOn cleanToolkit

